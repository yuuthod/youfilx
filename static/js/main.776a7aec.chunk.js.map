{"version":3,"sources":["Components/Header.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Header","styled","header","_templateObject","List","ul","_templateObject2","Item","li","_templateObject3","props","current","SLink","Link","_templateObject4","withRouter","_ref","pathname","location","react_default","a","createElement","to","Container","div","Section_templateObject","Title","span","Section_templateObject2","Grid","Section_templateObject3","Section","title","children","Loader_templateObject","Loader","Loader_Container","role","aria-label","Message_templateObject","Text","Message_templateObject2","color","Message","text","Message_Container","PropType","string","isRequired","Poster_templateObject","ImgContainer","Poster_templateObject2","Image","Poster_templateObject3","Poster_templateObject4","Rating","_templateObject5","Year","_templateObject6","Poster","id","imageUrl","rating","year","_ref$isMovie","isMovie","react_router_dom","concat","Poster_Container","Poster_Title","HomePresenter_templateObject","HomePresenter","nowPlaying","upcoming","popular","loading","error","HomePresenter_Container","length","Components_Section","map","movie","Components_Poster","key","poster_path","original_title","vote_average","release_date","substring","Components_Message","api","axios","create","baseURL","params","api_key","language","moviesApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","tvDetail","HomeContainer","state","data","results","this","setState","_this$state","Home_HomePresenter","React","Component","TVPresenter_templateObject","TVPresenter","TVPresenter_Container","tv","original_name","first_air_date","TVContainer","TV_TVPresenter","SearchPresenter_templateObject","Form","form","SearchPresenter_templateObject2","Input","input","SearchPresenter_templateObject3","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","SearchPresenter_Container","onSubmit","placeholder","value","type","onChange","Fragment","SearchContainer","event","target","_this","preventDefault","searchByTerm","_callee","_ref2","_ref3","regenerator_default","wrap","_context","prev","next","sent","t0","finish","stop","Search_SearchPresenter","DetailPresenter","result","propTypes","PropTypes","object","bool","DetailContainer","_default","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","includes","match","push","history","parseId","parseInt","isNaN","Detail_DetailPresenter","Router","Components_Header","react_router","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","GlobalStyles_templateObject","reset","App","GlobalStyles","ReactDOM","render","Components_App","document","getElementById"],"mappings":"++BAIA,IAAMA,EAASC,UAAOC,OAAVC,KAcNC,EAAOH,UAAOI,GAAVC,KAGJC,EAAON,UAAOO,GAAVC,IAImB,SAAAC,GAAK,OAAIA,EAAMC,QAAU,MAAQ,gBAIxDC,EAAQX,kBAAOY,IAAPZ,CAAHa,KAOIC,cAAY,SAAAC,GAAA,IAAaC,EAAbD,EAAEE,SAAWD,SAAb,OACzBE,EAAAC,EAAAC,cAACrB,EAAD,KACEmB,EAAAC,EAAAC,cAACjB,EAAD,KACEe,EAAAC,EAAAC,cAACd,EAAD,CAAMI,QAAsB,MAAbM,GACbE,EAAAC,EAAAC,cAACT,EAAD,CAAOU,GAAG,KAAV,WAEFH,EAAAC,EAAAC,cAACd,EAAD,CAAMI,QAAsB,QAAbM,GACbE,EAAAC,EAAAC,cAACT,EAAD,CAAOU,GAAG,OAAV,OAEFH,EAAAC,EAAAC,cAACd,EAAD,CAAMI,QAAsB,YAAbM,GACbE,EAAAC,EAAAC,cAACT,EAAD,CAAOU,GAAG,WAAV,mcC1CR,IAAMC,EAAYtB,UAAOuB,IAAVC,KAMTC,EAAQzB,UAAO0B,KAAVC,KAKLC,EAAO5B,UAAOuB,IAAVM,KAwBKC,EAjBC,SAAAf,GAAA,IAAEgB,EAAFhB,EAAEgB,MAAOC,EAATjB,EAASiB,SAAT,OACdd,EAAAC,EAAAC,cAACE,EAAD,KACEJ,EAAAC,EAAAC,cAACK,EAAD,KAAQM,GACRb,EAAAC,EAAAC,cAACQ,EAAD,KAAOI,uMCtBX,IAAMV,EAAYtB,UAAOuB,IAAVU,KASAC,EAAA,kBACbhB,EAAAC,EAAAC,cAACe,EAAD,KACEjB,EAAAC,EAAAC,cAAA,QAAMgB,KAAK,MAAMC,aAAW,WAA5B,0PCVJ,IAAMf,EAAYtB,UAAOuB,IAAVe,KAMTC,EAAOvC,UAAO0B,KAAVc,IACE,SAAA/B,GAAK,OAAIA,EAAMgC,QAGrBC,EAAU,SAAA3B,GAAA,IAAG4B,EAAH5B,EAAG4B,KAAMF,EAAT1B,EAAS0B,MAAT,OACdvB,EAAAC,EAAAC,cAACwB,EAAD,KACE1B,EAAAC,EAAAC,cAACmB,EAAD,CAAME,MAAOA,GAAQE,KAIzBD,EAAQG,SAAW,CACjBF,KAAME,IAASC,OAAOC,WACtBN,MAAOI,IAASC,OAAOC,YAGVL,saCpBf,IAAMpB,EAAYtB,UAAOuB,IAAVyB,KAETC,EAAejD,UAAOuB,IAAV2B,KAEZC,GAAQnD,UAAOuB,IAAV6B,KAEL3B,GAAQzB,UAAO0B,KAAV2B,KAELC,GAAStD,UAAO0B,KAAV6B,KAENC,GAAOxD,UAAO0B,KAAV+B,KA6BKC,GA3BA,SAAA3C,GAAA,IAAG4C,EAAH5C,EAAG4C,GAAIC,EAAP7C,EAAO6C,SAAU7B,EAAjBhB,EAAiBgB,MAAO8B,EAAxB9C,EAAwB8C,OAAQC,EAAhC/C,EAAgC+C,KAAhCC,EAAAhD,EAAsCiD,eAAtC,IAAAD,KAAA,OACb7C,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAM5C,GAAI2C,EAAO,UAAAE,OAAaP,GAAb,OAAAO,OAA2BP,IAC1CzC,EAAAC,EAAAC,cAAC+C,EAAD,KACEjD,EAAAC,EAAAC,cAAC6B,EAAD,KACE/B,EAAAC,EAAAC,cAAC+B,GAAD,CAAOS,SAAUA,IACjB1C,EAAAC,EAAAC,cAACkC,GAAD,KACEpC,EAAAC,EAAAC,cAAA,QAAMgB,KAAK,MAAMC,aAAW,UAA5B,gBAEQ,IACPwB,EAJH,QAOF3C,EAAAC,EAAAC,cAACgD,GAAD,KAAQrC,GACRb,EAAAC,EAAAC,cAACoC,GAAD,KAAOM,qGCtBb,IAAMxC,GAAYtB,UAAOuB,IAAV8C,MAkEAC,GA9DO,SAAAvD,GAAA,IAAGwD,EAAHxD,EAAGwD,WAAYC,EAAfzD,EAAeyD,SAAUC,EAAzB1D,EAAyB0D,QAASC,EAAlC3D,EAAkC2D,QAASC,EAA3C5D,EAA2C4D,MAA3C,OACpBD,EACExD,EAAAC,EAAAC,cAACc,EAAD,MAEAhB,EAAAC,EAAAC,cAACwD,GAAD,KACGL,GAAcA,EAAWM,OAAS,GACjC3D,EAAAC,EAAAC,cAAC0D,EAAD,CAAS/C,MAAM,eACZwC,EAAWQ,IAAI,SAAAC,GAAK,OACnB9D,EAAAC,EAAAC,cAAC6D,GAAD,CACEC,IAAKF,EAAMrB,GACXA,GAAIqB,EAAMrB,GACVC,SAAUoB,EAAMG,YAChBpD,MAAOiD,EAAMI,eACbvB,OAAQmB,EAAMK,aACdvB,KAAMkB,EAAMM,aAAaC,UAAU,EAAG,GACtCvB,SAAS,OAKhBQ,GAAYA,EAASK,OAAS,GAC7B3D,EAAAC,EAAAC,cAAC0D,EAAD,CAAS/C,MAAM,mBACZyC,EAASO,IAAI,SAAAC,GAAK,OACjB9D,EAAAC,EAAAC,cAAC6D,GAAD,CACEC,IAAKF,EAAMrB,GACXA,GAAIqB,EAAMrB,GACVC,SAAUoB,EAAMG,YAChBpD,MAAOiD,EAAMI,eACbvB,OAAQmB,EAAMK,aACdvB,KAAMkB,EAAMM,aAAaC,UAAU,EAAG,GACtCvB,SAAS,OAKhBS,GAAWA,EAAQI,OAAS,GAC3B3D,EAAAC,EAAAC,cAAC0D,EAAD,CAAS/C,MAAM,kBACZ0C,EAAQM,IAAI,SAAAC,GAAK,OAChB9D,EAAAC,EAAAC,cAAC6D,GAAD,CACEC,IAAKF,EAAMrB,GACXA,GAAIqB,EAAMrB,GACVC,SAAUoB,EAAMG,YAChBpD,MAAOiD,EAAMI,eACbvB,OAAQmB,EAAMK,aACdvB,KAAMkB,EAAMM,aAAaC,UAAU,EAAG,GACtCvB,SAAS,OAKhBW,GAASzD,EAAAC,EAAAC,cAACoE,EAAD,CAAS/C,MAAM,UAAUE,KAAMgC,eC5DzCc,WAAMC,EAAMC,OAAO,CACvBC,QAAS,gCACTC,OAAQ,CACNC,QAAU,mCACVC,SAAU,WAIDC,GAAY,CACvBzB,WAAY,kBAAMkB,GAAIQ,IAAI,sBAC1BzB,SAAU,kBAAMiB,GAAIQ,IAAI,mBACxBxB,QAAS,kBAAMgB,GAAIQ,IAAI,kBACvBC,YAAa,SAAAvC,GAAE,OACb8B,GAAIQ,IAAJ,SAAA/B,OAAiBP,GAAM,CACrBkC,OAAQ,CACNM,mBAAoB,aAG1BC,OAAQ,SAACC,GAAD,OACNZ,GAAIQ,IAAI,eAAgB,CACtBJ,OAAQ,CACNS,MAAOC,mBAAmBF,QAKrBG,GAAQ,CACnBC,SAAU,kBAAMhB,GAAIQ,IAAI,iBACxBxB,QAAS,kBAAMgB,GAAIQ,IAAI,eACvBS,YAAa,kBAAMjB,GAAIQ,IAAI,oBAC3BU,SAAU,SAAAhD,GAAE,OACV8B,GAAIQ,IAAJ,MAAA/B,OAAcP,GAAM,CAClBkC,OAAQ,CACNM,mBAAoB,aAG1BC,OAAQ,SAACC,GAAD,OACNZ,GAAIQ,IAAI,YAAa,CACnBJ,OAAQ,CACNS,MAAOC,mBAAmBF,QCvCnBO,8MCKbC,MAAQ,CACNtC,WAAY,KACZC,SAAU,KACVC,QAAS,KACTE,MAAO,KACPD,SAAS,uOAcGsB,GAAUzB,oCADFA,IAAhBuC,KAAOC,iBAICf,GAAUxB,kCADFA,IAAhBsC,KAAOC,kBAICf,GAAUvB,2BADFA,IAAhBqC,KAAOC,QAETC,KAAKC,SAAS,CAGZ1C,aACAC,WACAC,8DAGAuC,KAAKC,SAAS,CACZtC,MAAO,4DAGTqC,KAAKC,SAAS,CACZvC,SAAS,oKAOR,IAAAwC,EACmDF,KAAKH,MAAvDtC,EADD2C,EACC3C,WAAYC,EADb0C,EACa1C,SAAUC,EADvByC,EACuBzC,QAASE,EADhCuC,EACgCvC,MAAOD,EADvCwC,EACuCxC,QAC9C,OACExD,EAAAC,EAAAC,cAAC+F,GAAD,CACE5C,WAAYA,EACZC,SAAUA,EACVC,QAASA,EACTE,MAAOA,EACPD,QAASA,WAvDY0C,IAAMC,kFCEnC,IAAM/F,GAAYtB,UAAOuB,IAAV+F,MAqEAC,GAnEK,SAAAxG,GAAA,IAClB0F,EADkB1F,EAClB0F,SACAhC,EAFkB1D,EAElB0D,QACAiC,EAHkB3F,EAGlB2F,YAEAhC,GALkB3D,EAIlB4F,SAJkB5F,EAKlB2D,SACAC,EANkB5D,EAMlB4D,MANkB,OAQlBD,EACExD,EAAAC,EAAAC,cAACc,EAAD,MAEAhB,EAAAC,EAAAC,cAACoG,GAAD,KACGf,GAAYA,EAAS5B,OAAS,GAC7B3D,EAAAC,EAAAC,cAAC0D,EAAD,CAAS/C,MAAM,mBACZ0E,EAAS1B,IAAI,SAAA0C,GAAE,OACdvG,EAAAC,EAAAC,cAAC6D,GAAD,CACEC,IAAKuC,EAAG9D,GACRA,GAAI8D,EAAG9D,GACPC,SAAU6D,EAAGtC,YACbpD,MAAO0F,EAAGC,cACV7D,OAAQ4D,EAAGpC,aACXvB,KAAM2D,EAAGE,eAAepC,UAAU,EAAG,QAK5Cd,GAAWA,EAAQI,OAAS,GAC3B3D,EAAAC,EAAAC,cAAC0D,EAAD,CAAS/C,MAAM,iBACZ0C,EAAQM,IAAI,SAAA0C,GAAE,OACbvG,EAAAC,EAAAC,cAAC6D,GAAD,CACEC,IAAKuC,EAAG9D,GACRA,GAAI8D,EAAG9D,GACPC,SAAU6D,EAAGtC,YACbpD,MAAO0F,EAAGC,cACV7D,OAAQ4D,EAAGpC,aACXvB,KAAM2D,EAAGE,eAAepC,UAAU,EAAG,QAK5CmB,GAAeA,EAAY7B,OAAS,GACnC3D,EAAAC,EAAAC,cAAC0D,EAAD,CAAS/C,MAAM,qBACZ2E,EAAY3B,IAAI,SAAA0C,GAAE,OACjBvG,EAAAC,EAAAC,cAAC6D,GAAD,CACEC,IAAKuC,EAAG9D,GACRA,GAAI8D,EAAG9D,GACPC,SAAU6D,EAAGtC,YACbpD,MAAO0F,EAAGC,cACV7D,OAAQ4D,EAAGpC,aACXvB,KAAM2D,EAAGE,eAAepC,UAAU,EAAG,QAK5CZ,GAASzD,EAAAC,EAAAC,cAACoE,EAAD,CAAS/C,MAAM,UAAUE,KAAMgC,MC9DhCiD,8MCGbf,MAAQ,CACNJ,SAAU,KACVhC,QAAS,KACTiC,YAAa,KACbC,SAAU,KACVhC,MAAO,KACPD,SAAS,uOASG8B,GAAMC,kCADLA,IADJK,KACJC,iBAIOP,GAAM/B,iCADLA,IADJqC,KACJC,kBAIOP,GAAME,+BADLA,IADJI,KACJC,QAEHC,KAAKC,SAAS,CACZR,WACAhC,UACAiC,kEAGFM,KAAKC,SAAS,CACZtC,MAAO,wDAGTqC,KAAKC,SAAS,CACZvC,SAAS,oKAKN,IAAAwC,EAC8DF,KAAKH,MAAlEJ,EADDS,EACCT,SAAUhC,EADXyC,EACWzC,QAASiC,EADpBQ,EACoBR,YAAaC,EADjCO,EACiCP,SAAUhC,EAD3CuC,EAC2CvC,MAAOD,EADlDwC,EACkDxC,QACzD,OACExD,EAAAC,EAAAC,cAACyG,GAAD,CACEpB,SAAUA,EACVhC,QAASA,EACTiC,YAAaA,EACbC,SAAUA,EACVhC,MAAOA,EACPD,QAASA,WAhDY0C,IAAMC,uUCInC,IAAM/F,GAAYtB,UAAOuB,IAAVuG,MAITC,GAAO/H,UAAOgI,KAAVC,MAIJC,GAAQlI,UAAOmI,MAAVC,MAiFIC,GA3ES,SAAAtH,GAAA,IACtBuH,EADsBvH,EACtBuH,aACAC,EAFsBxH,EAEtBwH,UACA7D,EAHsB3D,EAGtB2D,QACAC,EAJsB5D,EAItB4D,MACA6D,EALsBzH,EAKtByH,WACAC,EANsB1H,EAMtB0H,aACAC,EAPsB3H,EAOtB2H,WAPsB,OAStBxH,EAAAC,EAAAC,cAACuH,GAAD,KACEzH,EAAAC,EAAAC,cAAC2G,GAAD,CAAMa,SAAUH,GACdvH,EAAAC,EAAAC,cAAC8G,GAAD,CACEW,YAAY,4BACZC,MAAON,EACPO,KAAK,OACLC,SAAUN,KAGbhE,EACCxD,EAAAC,EAAAC,cAACc,EAAD,MAEAhB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8H,SAAA,KACGX,GAAgBA,EAAazD,OAAS,GACrC3D,EAAAC,EAAAC,cAAC0D,EAAD,CAAS/C,MAAM,gBACZuG,EAAavD,IAAI,SAAAC,GAAK,OACrB9D,EAAAC,EAAAC,cAAC6D,GAAD,CACEC,IAAKF,EAAMrB,GACXA,GAAIqB,EAAMrB,GACVC,SAAUoB,EAAMG,YAChBpD,MAAOiD,EAAMI,eACbvB,OAAQmB,EAAMK,aACdvB,KAAMkB,EAAMM,aAAaC,UAAU,EAAG,GACtCvB,SAAS,OAKhBuE,GAAaA,EAAU1D,OAAS,GAC/B3D,EAAAC,EAAAC,cAAC0D,EAAD,CAAS/C,MAAM,aACZwG,EAAUxD,IAAI,SAAA0C,GAAE,OACfvG,EAAAC,EAAAC,cAAC6D,GAAD,CACEC,IAAKuC,EAAG9D,GACRA,GAAI8D,EAAG9D,GACPC,SAAU6D,EAAGtC,YACbpD,MAAO0F,EAAGC,cACV7D,OAAQ4D,EAAGpC,aACXvB,KAAM2D,EAAGE,eAAepC,UAAU,EAAG,QAK5CZ,GAASzD,EAAAC,EAAAC,cAACoE,EAAD,CAAS/C,MAAM,SAASE,KAAMgC,IACvC4D,GACCD,GACqB,IAArBC,EAAU1D,QACc,IAAxByD,EAAazD,QACX3D,EAAAC,EAAAC,cAACoE,EAAD,CAAS7C,KAAK,gBAAgBF,MAAM,eC5EjCyG,8MCGbrC,MAAQ,CAENyB,aAAc,KACdC,UAAW,KAEXC,WAAY,GAEZ9D,SAAS,EAETC,MAAO,MAGT+D,WAAa,SAAAS,GAAS,IACHL,EAAWK,EAApBC,OAASN,MACjBO,EAAKpC,SAAS,CACZuB,WAAYM,OAchBL,aAAe,SAAAU,GACbA,EAAMG,iBADgB,IAEdd,EAAea,EAAKxC,MAApB2B,WACU,KAAfA,GACDa,EAAKE,aAAaf,MAStBe,kCAAe,SAAAC,IAAA,IAAAhB,EAAAiB,EAAAnB,EAAAoB,EAAAnB,EAAA,OAAAoB,EAAAxI,EAAAyI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACLvB,EAAea,EAAKxC,MAApB2B,WADKqB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAKD/D,GAAUI,OAAOoC,GALhB,cAAAiB,EAAAI,EAAAG,KAIQ1B,EAJRmB,EAIT3C,KAAQC,QAJC8C,EAAAE,KAAA,EAQDvD,GAAMJ,OAAOoC,GARZ,OAAAkB,EAAAG,EAAAG,KAOQzB,EAPRmB,EAOT5C,KAAQC,QAEVsC,EAAKpC,SAAS,CACZqB,eACAC,cAXSsB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAI,GAAAJ,EAAA,SAcXR,EAAKpC,SAAS,CAAEtC,MAAO,wBAdZ,eAAAkF,EAAAC,KAAA,GAgBXT,EAAKpC,SAAS,CAAEvC,SAAS,IAhBdmF,EAAAK,OAAA,6BAAAL,EAAAM,SAAAX,EAAA,gGAoBN,IAAAtC,EAOHF,KAAKH,MALPyB,EAFKpB,EAELoB,aACAC,EAHKrB,EAGLqB,UACAC,EAJKtB,EAILsB,WACA9D,EALKwC,EAKLxC,QACAC,EANKuC,EAMLvC,MAGF,OACEzD,EAAAC,EAAAC,cAACgJ,GAAD,CACE9B,aAAcA,EACdC,UAAWA,EACXC,WAAYA,EACZ9D,QAASA,EACTC,MAAOA,EACP8D,aAAczB,KAAKyB,aACnBC,WAAY1B,KAAK0B,oBAhFItB,IAAMC,WCA7BgD,GAAkB,SAAAtJ,KAAGuJ,OAAHvJ,EAAW4D,MAAX5D,EAAkB2D,QAAlB3D,EAA2BiD,QAA3B,OAAyC,MAEjEqG,GAAgBE,UAAY,CAC1BD,OAAQE,IAAUC,OAClB9F,MAAO6F,IAAU1H,OAAOC,WACxB2B,QAAS8F,IAAUE,KAAK3H,WACxBiB,QAASwG,IAAUE,KAAK3H,YAGXsH,UCXAM,eCab,SAAAC,EAAYnK,GAAO,IAAA4I,EAAAwB,OAAAC,EAAA,EAAAD,CAAA7D,KAAA4D,GACjBvB,EAAAwB,OAAAE,EAAA,EAAAF,CAAA7D,KAAA6D,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAjE,KAAMvG,IADW,IAGHO,EACVP,EADFQ,SAAYD,SAHG,OAOjBqI,EAAKxC,MAAQ,CACXyD,OAAQ,KACR3F,MAAO,GACPD,SAAS,EACTV,QAAShD,EAASkK,SAAS,YAXZ7B,oNAqBbrC,KAAKvG,MAHKkD,IADZwH,MACEtF,OAAUlC,GAEDyH,IAAXC,QAAWD,KAELpH,EAAYgD,KAAKH,MAAjB7C,QAIFsH,EAAUC,SAAS5H,IACrB6H,MAAMF,4CACDF,EAAK,gBAGVd,EAAS,eAGPtG,oCACwBgC,GAAUE,YAAYoF,oBAAvChB,IAANxD,8CAEuBN,GAAMG,SAAS2E,oBAAhChB,IAANxD,+DAGLE,KAAKC,SAAS,CAAEtC,MAAO,kDAGvBqC,KAAKC,SAAS,CAAEvC,SAAS,EAAO4F,2KAI3B,IAAApD,EACqCF,KAAKH,MAAzCyD,EADDpD,EACCoD,OAAQ3F,EADTuC,EACSvC,MAAOD,EADhBwC,EACgBxC,QAASV,EADzBkD,EACyBlD,QAChC,OACE9C,EAAAC,EAAAC,cAACqK,GAAD,CACEnB,OAAQA,EACR3F,MAAOA,EACPD,QAASA,EACTV,QAASA,WA/DYoD,IAAMC,WCOpBqE,GAAA,kBACXxK,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,KACI/C,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8H,SAAA,KACI/H,EAAAC,EAAAC,cAACuK,EAAD,MACAzK,EAAAC,EAAAC,cAACwK,EAAA,EAAD,KACI1K,EAAAC,EAAAC,cAACwK,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWC,KACjC9K,EAAAC,EAAAC,cAACwK,EAAA,EAAD,CAAOC,KAAK,MAAMC,OAAK,EAACC,UAAWE,KAEnC/K,EAAAC,EAAAC,cAACwK,EAAA,EAAD,CAAOC,KAAK,UAAUE,UAAWG,KACjChL,EAAAC,EAAAC,cAACwK,EAAA,EAAD,CAAOC,KAAK,aAAaE,UAAWI,KAEpCjL,EAAAC,EAAAC,cAACwK,EAAA,EAAD,CAAOC,KAAK,UAAUE,UAAWI,KACjCjL,EAAAC,EAAAC,cAACwK,EAAA,EAAD,CAAUQ,KAAK,IAAI/K,GAAG,saCtBtC,IAmBegL,GAnBMC,4BAAHC,KACdC,MCaWC,oLAXX,OACEvL,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8H,SAAA,KACE/H,EAAAC,EAAAC,cAACsK,GAAD,MACAxK,EAAAC,EAAAC,cAACsL,GAAD,cALUrF,aCAlBsF,IAASC,OAAO1L,EAAAC,EAAAC,cAACyL,GAAD,MAASC,SAASC,eAAe","file":"static/js/main.776a7aec.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: rgba(20, 20, 20, 0.5);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0,0,0,0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 3px solid ${props => props.current ? \"red\" : \"transparent\"};\r\n  transition: border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default withRouter( ({location: {pathname}}) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));\r\n\r\n// withRouter 로 다른 컴포넌트와 props를 연결해서 사용할 수 있음\r\n ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n:not(:last-child) {\r\n  margin-bottom: 50px;\r\n}\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({title, children}) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\n// children : 값이 하나가 아닌 여러개일때 사용\r\nSection.propTypes = {\r\n  title:PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n      PropTypes.arrayOf(PropTypes.node),\r\n      PropTypes.node\r\n    ]),\r\n\r\n};\r\n\r\nexport default Section;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flexl;\r\n  justify-content: center;\r\n  font-size: 20px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport default () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      WAIT...\r\n    </span>\r\n  </Container>\r\n);\r\n","import React from \"react\";\r\nimport PropType from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: #${props => props.color};\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.PropType = {\r\n  text: PropType.string.isRequired,\r\n  color: PropType.string.isRequired\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div``;\r\n\r\nconst ImgContainer = styled.div``;\r\n\r\nconst Image = styled.div``;\r\n\r\nconst Title = styled.span``;\r\n\r\nconst Rating = styled.span``;\r\n\r\nconst Year = styled.span``;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\r\n    <Container>\r\n      <ImgContainer>\r\n        <Image imageUrl={imageUrl} />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            🌟\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImgContainer>\r\n      <Title>{title}</Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number.isRequired,\r\n  year: PropTypes.string.isRequired,\r\n  isMovie: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 10px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, upcoming, popular, loading, error }) =>\r\n  loading ? (\r\n    <Loader />\r\n  ) : (\r\n    <Container>\r\n      {nowPlaying && nowPlaying.length > 0 && (\r\n        <Section title=\"Now Playing\">\r\n          {nowPlaying.map(movie => (\r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              imageUrl={movie.poster_path}\r\n              title={movie.original_title}\r\n              rating={movie.vote_average}\r\n              year={movie.release_date.substring(0, 4)}\r\n              isMovie={true}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {upcoming && upcoming.length > 0 && (\r\n        <Section title=\"Upcoming Movies\">\r\n          {upcoming.map(movie => (\r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              imageUrl={movie.poster_path}\r\n              title={movie.original_title}\r\n              rating={movie.vote_average}\r\n              year={movie.release_date.substring(0, 4)}\r\n              isMovie={true}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {popular && popular.length > 0 && (\r\n        <Section title=\"Popular Movies\">\r\n          {popular.map(movie => (\r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              imageUrl={movie.poster_path}\r\n              title={movie.original_title}\r\n              rating={movie.vote_average}\r\n              year={movie.release_date.substring(0, 4)}\r\n              isMovie={true}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {error && <Message color=\"#e74c3c\" text={error} />}\r\n    </Container>\r\n  );\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key : \"c687c3a1bd75b9cce10df38846b9118d\",\r\n    language: \"en-US\"\r\n  }\r\n});\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upcoming: () => api.get(\"movie/upcoming\"), \r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: id => \r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\"\r\n      }\r\n    }), \r\n  search: (term) => \r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: encodeURIComponent(term)\r\n      }\r\n    })\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  tvDetail: id => \r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\"\r\n      }\r\n    }),\r\n  search: (term) => \r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: encodeURIComponent(term)\r\n      }\r\n    })\r\n};","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { moviesApi } from \"api\";\r\n\r\n// 컨테이너 컴포넌트\r\n\r\nexport default class extends React.Component{\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true\r\n  }\r\n\r\n  // 2option\r\n  // 1. 전체 API 요청을 한꺼번에 할 수 있고,\r\n  // 2. 각각의 요청을 분리된 함수로 만들어서 따로 요청 가능\r\n  // 그렇게 크지 않다면 componentDidmount 안에서 전부 해결\r\n  async componentDidMount() {\r\n    // async\r\n    // await\r\n    // 뭔가를 끝낼때까지 기다리는 함수\r\n    try{\r\n      const {\r\n        data: {results: nowPlaying}\r\n      } = await moviesApi.nowPlaying();\r\n      const {\r\n        data: {results: upcoming}\r\n      } = await moviesApi.upcoming();\r\n      const {\r\n        data: {results: popular}\r\n      } = await moviesApi.popular();\r\n      this.setState({\r\n        // nowPlaying : nowPlaying \r\n        // 동일하게 인식\r\n        nowPlaying,\r\n        upcoming,\r\n        popular\r\n      })\r\n    } catch {\r\n        this.setState({\r\n          error: \"Can't find movies imformation.\"\r\n        })\r\n    } finally {\r\n        this.setState({\r\n          loading: false\r\n        })\r\n    }\r\n  }\r\n\r\n  // HomePresenter로 가는 모든 스테이트 값을 렌더링\r\n  // Presenter(보여주는)것 없이 렌더링만\r\n  render() {\r\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n    return (\r\n      <HomePresenter \r\n        nowPlaying={nowPlaying} \r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div``;\r\n\r\nconst TVPresenter = ({\r\n  topRated,\r\n  popular,\r\n  airingToday,\r\n  tvDetail,\r\n  loading,\r\n  error\r\n}) =>\r\n  loading ? (\r\n    <Loader />\r\n  ) : (\r\n    <Container>\r\n      {topRated && topRated.length > 0 && (\r\n        <Section title=\"Top Rated Shows\">\r\n          {topRated.map(tv => (\r\n            <Poster\r\n              key={tv.id}\r\n              id={tv.id}\r\n              imageUrl={tv.poster_path}\r\n              title={tv.original_name}\r\n              rating={tv.vote_average}\r\n              year={tv.first_air_date.substring(0, 4)}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {popular && popular.length > 0 && (\r\n        <Section title=\"Popular Shows\">\r\n          {popular.map(tv => (\r\n            <Poster\r\n              key={tv.id}\r\n              id={tv.id}\r\n              imageUrl={tv.poster_path}\r\n              title={tv.original_name}\r\n              rating={tv.vote_average}\r\n              year={tv.first_air_date.substring(0, 4)}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {airingToday && airingToday.length > 0 && (\r\n        <Section title=\"AiringToday Shows\">\r\n          {airingToday.map(tv => (\r\n            <Poster\r\n              key={tv.id}\r\n              id={tv.id}\r\n              imageUrl={tv.poster_path}\r\n              title={tv.original_name}\r\n              rating={tv.vote_average}\r\n              year={tv.first_air_date.substring(0, 4)}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {error && <Message color=\"#e74c3c\" text={error} />}\r\n    </Container>\r\n  );\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  tvDetail: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"api\";\r\n\r\nexport default class extends React.Component{\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    tvDetail: null,\r\n    error: null,\r\n    loading: true\r\n  }\r\n\r\n  // componentWillMount = async() => {}\r\n  // 동일\r\n  async componentDidMount() {\r\n    try{\r\n      const {data:\r\n        {results:topRated}\r\n      } = await tvApi.topRated();\r\n      const {data:\r\n        {results:popular}\r\n      } = await tvApi.popular();\r\n      const {data:\r\n        {results:airingToday}\r\n      } = await tvApi.airingToday();\r\n      this.setState({\r\n        topRated,\r\n        popular,\r\n        airingToday\r\n      })\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find TV information.\"\r\n      })\r\n    } finally {\r\n      this.setState({\r\n        loading: false\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, tvDetail, error, loading } = this.state\r\n    return (\r\n      <TVPresenter \r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        tvDetail={tvDetail}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  loading,\r\n  error,\r\n  searchTerm,\r\n  handleSubmit,\r\n  updateTerm\r\n}) => (\r\n  <Container>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        placeholder=\"Search Movies or TV Shows\"\r\n        value={searchTerm}\r\n        type=\"text\"\r\n        onChange={updateTerm}\r\n      />\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {movieResults && movieResults.length > 0 && (\r\n          <Section title=\"Movie Result\">\r\n            {movieResults.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResults && tvResults.length > 0 && (\r\n          <Section title=\"TV Result\">\r\n            {tvResults.map(tv => (\r\n              <Poster\r\n                key={tv.id}\r\n                id={tv.id}\r\n                imageUrl={tv.poster_path}\r\n                title={tv.original_name}\r\n                rating={tv.vote_average}\r\n                year={tv.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"e74c3c\" text={error} />}\r\n        {tvResults &&\r\n          movieResults &&\r\n          tvResults.length === 0 &&\r\n          movieResults.length === 0 && (\r\n            <Message text=\"Nothing found\" color=\"#95a5a6\" />\r\n          )}\r\n      </>\r\n    )}\r\n  </Container>\r\n);\r\n\r\n// input을 컨트롤 하기 위해 value={searchTerm}를 추가하고 searchTerm를 생성해 값을 받는다.\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string.isRequired,\r\n  searchTerm: PropTypes.string,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;","import React from \"react\"; \r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { moviesApi, tvApi } from \"api\";\r\n\r\nexport default class extends React.Component{\r\n  state = {\r\n    // 검색 결과\r\n    movieResults: null,\r\n    tvResults: null,\r\n    // 검색 내용\r\n    searchTerm: \"\",\r\n    // 검색 하면 true\r\n    loading: false,\r\n    // error 있으면 값넣고, 없으면 null 유지\r\n    error: \"\"\r\n  };\r\n\r\n  updateTerm = event => {\r\n    const { target: {value} } = event;\r\n    this.setState({\r\n      searchTerm: value\r\n    })\r\n  }\r\n\r\n  // #1 테스트용\r\n  // SearchPresenter에서 handleSebmit 호출\r\n  // componentDidMount일때 handleSubmit을 호출\r\n  // componentDidMount() {\r\n  //   this.handleSubmit();\r\n  // };\r\n\r\n  // #2\r\n  // 호출했을때 searchTerm의 기본값은 \"\"\r\n  // 폼에 입력한 데이터를 Submit\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if(searchTerm !== \"\"){\r\n      this.searchByTerm(searchTerm);\r\n    }\r\n  };\r\n\r\n  // #3\r\n  // searchByTerm이 호출되고, mocieResult와 tvResult를 찾는다.\r\n  // 검색 결과\r\n  //searchByTerm = term => {\r\n  //아래와 동일\r\n  searchByTerm = async() => {\r\n    const { searchTerm } = this.state;\r\n    try {\r\n      const {\r\n        data: { results: movieResults }\r\n      } = await moviesApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResults }\r\n      } = await tvApi.search(searchTerm);\r\n      this.setState({\r\n        movieResults,\r\n        tvResults\r\n      })\r\n    } catch {\r\n      this.setState({ error: \"Can't find results \"})\r\n    } finally {\r\n      this.setState({ loading: false })\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { \r\n      movieResults, \r\n      tvResults, \r\n      searchTerm, \r\n      loading, \r\n      error }  \r\n      = this.state;\r\n    \r\n    return (\r\n      <SearchPresenter \r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        searchTerm={searchTerm}\r\n        loading={loading}\r\n        error={error}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst DetailPresenter = ({ result, error, loading, isMovie }) => null;\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  error: PropTypes.string.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  isMovie: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { moviesApi, tvApi } from \"api\";\r\n\r\n// 컨테이너 컴포넌트\r\n\r\nexport default class extends React.Component {\r\n  // isMovie를 constructor 함수 안에 만든 이유\r\n  // 전역으로 사용하기 위해서인듯 하다.\r\n\r\n  // constructor 함수 안에는 무조건 super()가 있어야 하며,\r\n  // 이는 this를 초기화 하기 위함이다. ( 생성자 함수 초기화 )\r\n  // super(props)를 사용하는 이유는 constructor 함수 안에서\r\n  // this.props 를 사용하기 위함이고, 다른곳에서 사용하려면\r\n  // 굳이 뭔가를 넣어줄 필요가 없다. ( 리액트가 자동으로 세팅해주기 때문 )\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname }\r\n    } = props;\r\n\r\n    // id값을 가져와서 하나의 결과값만 보여준다.\r\n    this.state = {\r\n      result: null,\r\n      error: \"\",\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\")\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id }\r\n      },\r\n      history: { push }\r\n    } = this.props;\r\n    const { isMovie } = this.state;\r\n\r\n    // parseInt : string >> number\r\n    // id 가 number가 아니면 home 으로 return\r\n    const parseId = parseInt(id);\r\n    if (isNaN(parseId)) {\r\n      return push(\"/\");\r\n    }\r\n\r\n    let result = null;\r\n    try {\r\n      // const a = \"dd\" === (a = \"dd\")\r\n      if (isMovie) {\r\n        ({ data: result } = await moviesApi.movieDetail(parseId));\r\n      } else {\r\n        ({ data: result } = await tvApi.tvDetail(parseId));\r\n      }\r\n    } catch {\r\n      this.setState({ error: \"can't find anything \" });\r\n    } finally {\r\n      // result가 tv던 movie던 값을 받아서 state에 기록함\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, error, loading, isMovie } = this.state;\r\n    return (\r\n      <DetailPresenter\r\n        result={result}\r\n        error={error}\r\n        loading={loading}\r\n        isMovie={isMovie}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n//import { HashRouter as Router, Route } from \"react-router-dom\";\r\n// URL에 /#/이 붙고 내 HASH를 사용한다.\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\r\n// url이 보여지는 형태가 다름 -> 일반 브라우저처럼 보여짐\r\n// HTML history API 사용\r\n// 두가지가 큰 차이가 있지는 않음\r\nimport Header from \"Components/Header\";\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV\";\r\nimport Search from \"Routes/Search\";\r\nimport Detail from \"Routes/Detail\";\r\n\r\nexport default () => (\r\n    <Router>\r\n        <>\r\n            <Header />\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Home} />\r\n                <Route path=\"/tv\" exact component={TV} />\r\n                {/* <Route path=\"/tv/popular\" render={() => <h1>popular</h1>} /> */}\r\n                <Route path=\"/search\" component={Search} />\r\n                <Route path=\"/movie/:id\" component={Detail} />\r\n                {/* :id >> : 부분은 뭐든지 와도 된다는 표시 */}\r\n                <Route path=\"/tv/:id\" component={Detail} />\r\n                <Redirect from=\"*\" to=\"/\" />\r\n            </Switch>\r\n        </>\r\n    </Router>\r\n);\r\n\r\n// Swich : 한번에 하나의 Router만 Render하게됨\r\n// 두개가 Render되면 오류남\r\n\r\n// <Route path=\"/tv/popular\" render={() => <h1>popular</h1>} />\r\n// path가 일부라도 일치하면 로드됨\r\n// /tv\r\n// /tv/anything\r\n// /tv로 시작하는 어떤 path던 tv가 같이 로드된다.\r\n// 위의 일을 발생시키지 않으려면 TV Router에 exact을 넣어 '정확히' 일치해야지만 로드될 수 있도록 해줘야 한다.\r\n\r\n// path > 어느 URL 에서 Router를 render 할 지 알려주고\r\n// component > 누군가 Router에 도착했을때 어떤 컴포넌트가 보여질 건지 \r\n\r\n// <Redirect from=\"*\" to=\"/\" /> \r\n// 일치하는 url이 없다면 여기서 모두 리다이렉트","import { createGlobalStyle } from \"styled-components\"\r\nimport reset from \"styled-reset\"\r\n\r\nconst globalStyles = createGlobalStyle`\r\n  ${reset};\r\n  a{\r\n    text-decoration:none;\r\n    color:#fff;\r\n  }\r\n  *{\r\n    box-sizing:border-box;\r\n  }\r\n  body{\r\n    font-family:-apple-ststem, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Canta;\r\n    font-size:14px;\r\n    background-color:rgba(20, 20, 20, 1);\r\n    padding-top: 80px;\r\n    color: #fff;\r\n  }\r\n\r\n`;\r\n\r\nexport default globalStyles;\r\n\r\n// const globalStyles = 대신\r\n// export default () => {}\r\n// 로 분리해서 선언해줄 필요 없이 바로 함수로 내보낼수도 있다.","import React, { Component } from 'react';\r\nimport Router from \"Components/Router\";\r\nimport GlobalStyles from \"Components/GlobalStyles\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Router />\r\n        <GlobalStyles />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// <> : Fragments\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from 'Components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}